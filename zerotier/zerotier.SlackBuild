#!/bin/bash -e

#RufusWilson revision date 2022/01/18

#Set initial variables:
CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

# The application's name
PRGNAM=zerotier

# The version which appears in the application's filename
VERSION=$(curl --silent "https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# The installation directory of the package (where its actual directory
# structure will be created)
PKG=$TMP/package-$PRGNAM

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Delete the leftover directories if they exist (due to a previous build)
# and (re)create the packaging directory
rm -rf $PKG
mkdir -p $TMP $PKG
rm -rf $TMP/$PRGNAM-$VERSION

# Change to the TMP directory
cd $TMP || exit 1

# Download the source
wget "https://api.github.com/repos/zerotier/ZeroTierOne/tarball/${VERSION}" -O $PRGNAM-$VERSION.tar.gz

# Extract the application source in TMP
# Note: if your application comes as a tar.bz2, you need tar -jxvf
tar -zxf $PRGNAM-$VERSION.tar.gz || exit 1

# Change to the application source directory
cd zerotier-ZeroTierOne* || exit 1

# Change ownership and permissions if necessary
# This may not be needed in some source tarballs, but it never hurts
chmod -R u+w,go+r-w,a-s .

# Compile the source, but exit if anything goes wrong
make one || exit 1

# Compile the manpages, but exit if anything goes wrong
make manpages || exit 1

# Install everything into the package directory, but exit if anything goes wrong
make install DESTDIR=$PKG || exit 1

# Create the ./install directory and copy the slack-desc into it
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Strip some libraries and binaries
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded #2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded #2> /dev/null
)

# Build the package
( cd $PKG
  /sbin/makepkg -l y -c n $CWD/$PRGNAM-$VERSION-$ARCH.txz
)

